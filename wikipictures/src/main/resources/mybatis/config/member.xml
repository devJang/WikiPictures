<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<resultMap type="memberVO" id="memberRM">
		<result property="favoriteSpace" column="fav_space" />
	</resultMap>
	
	<select id="findMemberById" resultType="memberVO">
		SELECT * FROM member
		WHERE id = #{value}
	</select>
	
	<select id="login" resultMap="memberRM">
		SELECT * FROM member
		WHERE id = #{id}
		AND
		password = #{password}
	</select>
	
	<select id="idcheck" resultType="int">
		SELECT count(*) FROM member
		WHERE id = #{value}
	</select>
	
	<insert id="registerMember" parameterType="memberVO">
		INSERT INTO
		member(id
		, nickname
		, password
		, birth
		, fav_space
		, enabled)
		VALUES
		(#{id}
		, #{nickname}
		, #{password}
		, #{birth}
		, #{favoriteSpace}
		,0)
	</insert>

	<update id="updateMember" parameterType="memberVO">
		UPDATE member
		SET
		nickname = #{nickname}
		, password = #{password}
		, fav_space = #{favoriteSpace}
		WHERE id = #{id}
	</update>

	<resultMap type="pictureVO" id="pictureRM">
		<result property="pictureDate" column="pic_date" />
		<result property="authorComment" column="author_comment" />
		<result property="pictureSpace" column="pic_space" />
	</resultMap>

	<select id="mypictures" resultMap="pictureRM" parameterType="pictureVO">
		SELECT rnum
		, keyword
		, path
		, author_comment
		, hits
		, pic_space
		, id
		, category
		FROM (SELECT row_number() OVER(ORDER BY keyword DESC)
		AS
		rnum
		, keyword
		, path
		, author_comment
		, hits
		, pic_space
		, id
		, category
		FROM
		picture) 
		WHERE rnum BETWEEN #{startRowNumber} AND #{endRowNumber}
		ORDER BY keyword DESC
	</select>

	<select id="totalContentCount" resultType="int">
		SELECT count(*) FROM picture
	</select>

	<resultMap type="mypageVO" id="mypageRM">
		<result property="replyDate" column="reply_date" />
		<result property="replyContent" column="reply_content" />
		<result property="memberVO.id" column="id" />
	</resultMap>

	<select id="show_secretreply_list" resultMap="mypageRM"
		parameterType="mypageVO">
		select id,reply_date,reply_content from(select
		row_number() over (order by
		id desc) as
		rnum,id,reply_date,reply_content from mypage)
		where rnum between
		#{startRowNumber} and #{endRowNumber} order by id desc
	</select>

	<select id="secretTotalContentCount" resultType="int">
		SELECT count(*) FROM mypage
	</select>

	<insert id="registerBuy" parameterType="mypageVO">
		MERGE INTO mypage
		USING
		DUAL
		ON(pic_date = #{pictureVO.pictureDate}
		AND
		keyword = #{pictureVO.keyword} AND id = #{memberVO.id})
		WHEN MATCHED THEN
		UPDATE SET buy_date = sysdate
		WHEN NOT MATCHED THEN
		INSERT(id,pic_date,keyword,buy_date)
		VALUES(#{memberVO.id}
		, #{pictureVO.pictureDate}
		, #{pictureVO.keyword}
		, sysdate)
	</insert>
	
	<!-- Spring Security에서 권한 체크를 위해 사용 -->
	<select id="selectAuthorityByUsername"  resultType="authoritiesVO">
		SELECT	id
		, authority
		FROM	authorities
		WHERE	id = #{username}
	</select>
	
	<!-- Spring Security 사용을 위한 권한 등록 -->
	<insert id="registerRole" parameterType="authoritiesVO">
		insert into authorities(id,authority) values(#{memberVO.id},#{authority})
	</insert>
	
</mapper>


<!-- <select id="getMemberCount" resultType="int"> select count(*) from security_member 
	</select> <insert id="registerRole" parameterType="authority"> insert into 
	authorities(username,authority) values(#{username},#{authority}) </insert> 
	Spring Security에서 로그인 인증시 사용 : 사용가능한(enabled 1) 계정일 경우만 조회. <select id="findMemberById" 
	resultType="memberVO"> SELECT id, password, name, address, enabled FROM security_member 
	WHERE id=#{value} AND enabled=1 </select> Spring Security에서 권한 체크를 위해 사용 
	<select id="selectAuthorityByUsername" resultType="authority"> SELECT username,authority 
	FROM authorities WHERE username=#{username} </select> -->










